{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/local-storage-api.js","../src/js/render-tasks.js","../src/js/tasks.js","../src/js/theme-switcher.js","../src/main.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('.header-form'),\n  taskNameInput: document.querySelector('[name=\"taskName\"]'),\n  taskDescrInput: document.querySelector('[name=\"taskDescription\"]'),\n  addBtn: document.querySelector('[type=\"submit\"]'),\n  tasksContainer: document.querySelector('.tasks-list'),\n  delBtn: document.querySelector('.task-list-item-btn'),\n  bodyEl: document.querySelector('.theme-dark'),\n  themeBtn: document.querySelector('.theme-toggle-button'),\n};\n","export const saveInLs = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nexport const getFormLs = key => {\n  const savedData = localStorage.getItem(key);\n  if (savedData) {\n    const parsedData = JSON.parse(savedData);\n    return parsedData;\n  }\n  return null;\n};\n","// Make sure refs is defined or imported here\nimport { refs } from './refs.js';\n\nexport function renderTasks(TASKS) {\n  refs.tasksContainer.innerHTML = TASKS.map(\n    taskobj =>\n      `<li class=\"task-list-item\">\n        <button class=\"task-list-item-btn\">Delete</button>\n        <h3>${taskobj.title}</h3>\n        <p>${taskobj.description}</p>\n      </li>`\n  ).join('');\n}\n","import { getFormLs, saveInLs } from './local-storage-api';\nimport { renderTasks } from './render-tasks';\n\nlet TASKS = [];\nconst key = 'tasks';\n\nexport function addTask(title, description) {\n  TASKS.push({ title, description });\n  renderTasks(TASKS);\n  saveInLs(key, TASKS);\n}\n\nexport function deleteTask(title) {\n  TASKS = TASKS.filter(taskobj => taskobj.title !== title);\n  renderTasks(TASKS);\n  saveInLs(key, TASKS);\n}\n\nexport function initTasks() {\n  TASKS = getFormLs(key) ?? [];\n  renderTasks(TASKS);\n}\n\n// [\n//   {\n//     title: 'Shopping',\n//     description: 'bread, mild',\n//   },\n//   {\n//     title: 'house cleaning',\n//     description: 'Vaccum, mop, broom',\n//   },\n//   {\n//     title: 'coocking',\n//     description: 'Cake, soup',\n//   },\n// ];\n","import { refs } from './refs';\n\n// bodyEl;\n\n// refs.themeBtn.addEventListener('click', (event) => {\n//     if(target )\n// });\n\nconst lightTheme = 'theme-light';\nconst darkTheme = 'theme-dark';\n\nexport function changeTheme() {\n  if (refs.bodyEl.classList.contains(darkTheme)) {\n    refs.bodyEl.classList.remove(darkTheme);\n    refs.bodyEl.classList.add(lightTheme);\n  } else {\n    refs.bodyEl.classList.remove(lightTheme);\n    refs.bodyEl.classList.add(darkTheme);\n  }\n}\n","import { refs } from './js/refs';\nimport { addTask, deleteTask, initTasks } from './js/tasks';\nimport { changeTheme } from './js/theme-switcher';\n\n/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n\ninitTasks();\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  const title = refs.taskNameInput.value.trim();\n  const description = refs.taskDescrInput.value.trim();\n\n  if (!title || !description) {\n    alert('Input cannot be empty!');\n    return;\n  } else {\n    addTask(title, description);\n    refs.form.reset();\n  }\n});\n\nrefs.tasksContainer.addEventListener('click', event => {\n  if (!event.target.classList.contains('task-list-item-btn')) {\n    return;\n  }\n  const title = event.target\n    .closest('.task-list-item')\n    .querySelector('h3').textContent;\n  deleteTask(title);\n});\n\nrefs.themeBtn.addEventListener('click', changeTheme);\n"],"names":["refs","saveInLs","key","value","getFormLs","savedData","renderTasks","TASKS","taskobj","addTask","title","description","deleteTask","initTasks","lightTheme","darkTheme","changeTheme","event"],"mappings":"ssBAAO,MAAMA,EAAO,CAClB,KAAM,SAAS,cAAc,cAAc,EAC3C,cAAe,SAAS,cAAc,mBAAmB,EACzD,eAAgB,SAAS,cAAc,0BAA0B,EACjE,OAAQ,SAAS,cAAc,iBAAiB,EAChD,eAAgB,SAAS,cAAc,aAAa,EACpD,OAAQ,SAAS,cAAc,qBAAqB,EACpD,OAAQ,SAAS,cAAc,aAAa,EAC5C,SAAU,SAAS,cAAc,sBAAsB,CACzD,ECTaC,EAAW,CAACC,EAAKC,IAAU,CACtC,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAK,CAAC,CACjD,EAEaC,EAAYF,GAAO,CAC9B,MAAMG,EAAY,aAAa,QAAQH,CAAG,EAC1C,OAAIG,EACiB,KAAK,MAAMA,CAAS,EAGlC,IACT,ECRO,SAASC,EAAYC,EAAO,CACjCP,EAAK,eAAe,UAAYO,EAAM,IACpCC,GACE;AAAA;AAAA,cAEQA,EAAQ,KAAK;AAAA,aACdA,EAAQ,WAAW;AAAA,YAEhC,EAAI,KAAK,EAAE,CACX,CCTA,IAAID,EAAQ,CAAA,EACZ,MAAML,EAAM,QAEL,SAASO,EAAQC,EAAOC,EAAa,CAC1CJ,EAAM,KAAK,CAAE,MAAAG,EAAO,YAAAC,CAAa,CAAA,EACjCL,EAAYC,CAAK,EACjBN,EAASC,EAAKK,CAAK,CACrB,CAEO,SAASK,EAAWF,EAAO,CAChCH,EAAQA,EAAM,OAAOC,GAAWA,EAAQ,QAAUE,CAAK,EACvDJ,EAAYC,CAAK,EACjBN,EAASC,EAAKK,CAAK,CACrB,CAEO,SAASM,GAAY,CAC1BN,EAAQH,EAAUF,CAAG,GAAK,GAC1BI,EAAYC,CAAK,CACnB,CCbA,MAAMO,EAAa,cACbC,EAAY,aAEX,SAASC,GAAc,CACxBhB,EAAK,OAAO,UAAU,SAASe,CAAS,GAC1Cf,EAAK,OAAO,UAAU,OAAOe,CAAS,EACtCf,EAAK,OAAO,UAAU,IAAIc,CAAU,IAEpCd,EAAK,OAAO,UAAU,OAAOc,CAAU,EACvCd,EAAK,OAAO,UAAU,IAAIe,CAAS,EAEvC,CCEAF,IAEAb,EAAK,KAAK,iBAAiB,SAAUiB,GAAS,CAC5CA,EAAM,eAAc,EACpB,MAAMP,EAAQV,EAAK,cAAc,MAAM,KAAI,EACrCW,EAAcX,EAAK,eAAe,MAAM,KAAI,EAElD,GAAI,CAACU,GAAS,CAACC,EAAa,CAC1B,MAAM,wBAAwB,EAC9B,MACJ,MACIF,EAAQC,EAAOC,CAAW,EAC1BX,EAAK,KAAK,OAEd,CAAC,EAEDA,EAAK,eAAe,iBAAiB,QAASiB,GAAS,CACrD,GAAI,CAACA,EAAM,OAAO,UAAU,SAAS,oBAAoB,EACvD,OAEF,MAAMP,EAAQO,EAAM,OACjB,QAAQ,iBAAiB,EACzB,cAAc,IAAI,EAAE,YACvBL,EAAWF,CAAK,CAClB,CAAC,EAEDV,EAAK,SAAS,iBAAiB,QAASgB,CAAW"}